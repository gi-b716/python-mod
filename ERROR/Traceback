def  Traceback_print ( file , line , module , lineread , Error , Errorread , other ):
    打印（'回溯（最近一次调用最后一次）：'）
    打印（“文件'{0}'，第{1}行，{2}”。格式（文件，行，模块））
    打印（“{0}”。格式（行读取））
    打印（“{0}：{1}”。格式（错误，错误读取））
    如果（其他 ==  ''）：
        经过
    其他：
        打印（其他）

def  Error_print (错误):
    '''
    类型错误
    语法错误*
    名称错误
    索引错误
    导入错误
    操作系统错误
    值错误
    标签错误
    零分误差
    Unicode错误
    '''

    Error_line  = { "TypeError" : "必须是 ***，而不是 ***" ,
                  "SyntaxError" : "无效语法" ,
                  }

    如果（错误 ==  “”）：
        打印（“类型错误”）
        打印（“a = '4'”）
        打印（“打印（a + 4）”）
        打印（“类型错误：必须是str，而不是int”）
        print ( " TypeError: must be ***, not *** \n " )

        打印（“语法错误”）
        打印（“如果 6 == 6”）
        打印（“^”）
        打印（“通过”）
        打印（“语法错误：无效语法\n ”）

        打印（“语法错误”）
        打印（“真= 1”）
        打印（“^”）
        打印（“语法错误：无法分配给关键字\n ”）

Error_print ( "" ) 
